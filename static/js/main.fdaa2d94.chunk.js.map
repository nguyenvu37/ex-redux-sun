{"version":3,"sources":["common/waiting.js","constants/constants.js","App.js","reducers/products.js","common/getEleInArray.js","common/getArrFromFilterKey.js","common/getArrFronFilterKeyCheckbox.js","reducers/totalRows.js","reducers/filters.js","reducers/loading.js","reducers/reducers.js","index.js"],"names":["Waiting","props","className","style","custome","FETCH_PRODUCTS","FETCH_TOTALROWS","GET_FILTERS","CHANGE_TYPE","CHANGE_CATEGORY","LOADING","ProductList","lazy","App","fallback","position","top","left","initialState","products","state","action","type","Types","getEleInArray","arr","counts","i","length","num","getArrDataFilters","arrData","arrDataType","dataTypes","map","item","brand","rate","keyTypes","Object","keys","valueTypes","values","arrTypes","id","key","undefined","value","select","push","getArrDataFilterKeyCheckbox","totalRows","console","log","data","dataTotalRows","dataFilterRows","dataTypeChangePage","sort","a","b","arrBrands","dataBrandChangePage","arrRating","dataRateChangePage","filterTotalRows","arrPrices","price","filters","loading","appReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdaa2d94.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Waiting = (props) => {\r\n  return (\r\n    <div className=\"waiting\" style={props.custome}>\r\n      <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n      <div>Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waiting;\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FETCH_TOTALROWS = \"FETCH_TOTALROWS\";\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\r\nexport const GET_FILTERS = \"GET_FILTERS\";\r\nexport const CHANGE_TYPE = \"CHANGE_TYPE\";\r\nexport const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\r\nexport const CHANGE_TYPECATEGORY = \"CHANGE_TYPECATEGORY\";\r\nexport const LOADING = \"LOADING\";\r\n","import React, { lazy, Suspense } from \"react\";\nimport \"./sass/style.scss\";\nimport Waiting from \"./common/waiting\";\n\nconst ProductList = lazy(() => import(\"./components/main\"));\nfunction App() {\n  return (\n    <Suspense\n      fallback={\n        <Waiting\n          custome={{ position: \"relative\", top: \"300px\", left: \"50%\" }}\n        />\n      }\n    >\n      <ProductList />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import * as Types from \"../constants/constants\";\r\n\r\nlet initialState = [];\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.FETCH_PRODUCTS:\r\n      state = action.products;\r\n      return [...state];\r\n    default:\r\n      return [...state];\r\n  }\r\n};\r\n\r\nexport default products;\r\n","export default function getEleInArray(arr) {\r\n  let counts = {};\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let num = arr[i];\r\n    counts[num] = counts[num] ? counts[num] + 1 : 1;\r\n  }\r\n\r\n  return counts;\r\n}\r\n","import getEleInArray from \"./getEleInArray\";\r\n\r\nexport default function getArrDataFilters(arrData, arrDataType, type) {\r\n  let dataTypes = [];\r\n  if (type === \"type\") {\r\n    dataTypes = arrData.map((item) => item.type);\r\n  }\r\n\r\n  if (type === \"brand\") {\r\n    dataTypes = arrData.map((item) => item.brand);\r\n  }\r\n\r\n  if (type === \"rate\") {\r\n    dataTypes = arrData.map((item) => item.rate);\r\n  }\r\n\r\n  let keyTypes = Object.keys(getEleInArray(dataTypes));\r\n  let valueTypes = Object.values(getEleInArray(dataTypes));\r\n  let arrTypes = [];\r\n  if (arrDataType.length !== 0) {\r\n    for (let i = 0; i < arrDataType.length; i++) {\r\n      let type = {\r\n        id: i + 1,\r\n        key: arrDataType[i] !== undefined ? arrDataType[i].key : keyTypes[i],\r\n        value:\r\n          arrDataType[i] !== undefined ? arrDataType[i].value : valueTypes[i],\r\n        select: arrDataType[i] !== undefined ? arrDataType[i].select : true,\r\n      };\r\n      arrTypes.push({\r\n        ...type,\r\n      });\r\n    }\r\n  } else {\r\n    for (let i = 0; i < keyTypes.length; i++) {\r\n      arrTypes.push({\r\n        id: i + 1,\r\n        key: keyTypes[i],\r\n        value: valueTypes[i],\r\n        select: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  return [...arrTypes];\r\n}\r\n","import getEleInArray from \"./getEleInArray\";\r\n\r\nexport default function getArrDataFilterKeyCheckbox(\r\n  arrData,\r\n  arrDataType,\r\n  type\r\n) {\r\n  let dataTypes = [];\r\n  if (type === \"type\") {\r\n    dataTypes = arrData.map((item) => item.type);\r\n  }\r\n\r\n  if (type === \"brand\") {\r\n    dataTypes = arrData.map((item) => item.brand);\r\n  }\r\n\r\n  if (type === \"rate\") {\r\n    dataTypes = arrData.map((item) => item.rate);\r\n  }\r\n\r\n  let keyTypes = Object.keys(getEleInArray(dataTypes));\r\n  let valueTypes = Object.values(getEleInArray(dataTypes));\r\n  let arrTypes = [];\r\n\r\n  for (let i = 0; i < keyTypes.length; i++) {\r\n    let type = {\r\n      id: i + 1,\r\n      key: keyTypes[i],\r\n      value: valueTypes[i],\r\n      select: true,\r\n    };\r\n\r\n    arrTypes.push({\r\n      ...type,\r\n    });\r\n  }\r\n\r\n  return [...arrTypes];\r\n}\r\n","import getArrDataFilters from \"../common/getArrFromFilterKey\";\r\nimport getArrDataFilterKeyCheckbox from \"../common/getArrFronFilterKeyCheckbox\";\r\nimport * as Types from \"../constants/constants\";\r\n\r\nlet initialState = {};\r\n\r\nconst totalRows = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.FETCH_TOTALROWS:\r\n      console.log(\"action totalRows\", action);\r\n      state.data = action.data.dataTotalRows;\r\n      let data = [...action.data.dataTotalRows];\r\n\r\n      // Get datatype filter\r\n      state.arrTypes = getArrDataFilters(\r\n        data,\r\n        action.data.dataFilterRows.dataTypeChangePage,\r\n        \"type\"\r\n      ).sort((a, b) => b.value - a.value);\r\n\r\n      // Get dataBrand filter\r\n      state.arrBrands = getArrDataFilters(\r\n        data,\r\n        action.data.dataFilterRows.dataBrandChangePage,\r\n        \"brand\"\r\n      ).sort((a, b) => b.value - a.value);\r\n\r\n      // Get dataRating filter\r\n      state.arrRating = getArrDataFilters(\r\n        data,\r\n        action.data.dataFilterRows.dataRateChangePage,\r\n        \"rate\"\r\n      ).sort((a, b) => b.key - a.key);\r\n\r\n      if (\r\n        action.data.dataFilterRows.filterTotalRows.type !== undefined &&\r\n        action.data.dataFilterRows.filterTotalRows.brand !== undefined\r\n      ) {\r\n        state.arrTypes = getArrDataFilterKeyCheckbox(\r\n          data,\r\n          action.data.dataFilterRows.dataTypeChangePage,\r\n          \"type\"\r\n        ).sort((a, b) => b.value - a.value);\r\n      }\r\n\r\n      if (\r\n        action.data.dataFilterRows.filterTotalRows.type !== undefined &&\r\n        action.data.dataFilterRows.filterTotalRows.brand !== undefined &&\r\n        action.data.dataFilterRows.filterTotalRows.rate !== undefined\r\n      ) {\r\n        console.log(\"test\");\r\n        state.arrBrands = getArrDataFilterKeyCheckbox(\r\n          data,\r\n          action.data.dataFilterRows.dataBrandChangePage,\r\n          \"brand\"\r\n        ).sort((a, b) => b.value - a.value);\r\n      }\r\n\r\n      // Get dataPrice filter\r\n      state.arrPrices = data.map((item) => item.price).sort((a, b) => a - b);\r\n\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default totalRows;\r\n","import * as Types from \"../constants/constants\";\r\n\r\nlet initialState = {};\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.GET_FILTERS:\r\n      state = action.filters;\r\n      return { ...state };\r\n    case Types.CHANGE_CATEGORY:\r\n      state = action.filters;\r\n      return { ...state };\r\n    case Types.CHANGE_TYPE:\r\n      state = action.filters;\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import * as Types from \"../constants/constants\";\r\n\r\nlet initialState = false;\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.LOADING:\r\n      state = action.loading;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import { combineReducers } from \"redux\";\r\nimport products from \"./products\";\r\nimport totalRows from \"./totalRows\";\r\nimport filters from \"./filters\";\r\nimport loading from \"./loading\";\r\n\r\nconst appReducers = combineReducers({\r\n  products,\r\n  totalRows,\r\n  filters,\r\n  loading,\r\n});\r\n\r\nexport default appReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport appReducers from \"./reducers/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(appReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}